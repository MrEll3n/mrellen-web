name: Build & Deploy via WebDAV (stable, Bun)

on:
  push:
    branches: [ stable ]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    env:
      BUN_VERSION: "latest"                  # pick a version range you support
      BUILD_CMD: "bun install --frozen-lockfile && bun run build"
      DIST_DIR: "dist"                       # change to your build output folder

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      # (Optional) If you want to cache Bunâ€™s downloads between runs, uncomment:
      # - name: Cache Bun downloads
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.bun/install/cache
      #     key: bun-cache-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
      #     restore-keys: |
      #       bun-cache-${{ runner.os }}-

      - name: Install & Build (Bun)
        run: |
          set -e
          ${{ env.BUILD_CMD }}
          test -d "${{ env.DIST_DIR }}" || { echo "::error::Missing build output '${{ env.DIST_DIR }}'"; ls -la; exit 1; }

      - name: Upload via WebDAV
        uses: bxb100/action-upload-webdav@v0.0.6
        with:
          webdav_address: ${{ secrets.WEBDAV_ADDRESS }}
          webdav_username: ${{ secrets.WEBDAV_USERNAME }}
          webdav_password: ${{ secrets.WEBDAV_PASSWORD }}
          webdav_upload_path: ${{ secrets.WEBDAV_UPLOAD_PATH }}
          files: |
            ${{ env.DIST_DIR }}/**
          keep_structure: true
          fail_on_unmatched_files: false
